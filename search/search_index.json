{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"DLM Research Platform Welcome to the internal research wiki for DLM. Sections Macro Dashboard Trade Ideas Pipelines Database Models","title":"Home"},{"location":"#dlm-research-platform","text":"Welcome to the internal research wiki for DLM.","title":"DLM Research Platform"},{"location":"#sections","text":"Macro Dashboard Trade Ideas Pipelines Database Models","title":"Sections"},{"location":"Roadmap/","text":"\ud83d\uddfa\ufe0f DLM Research Engine \u2013 Product Roadmap Version : 0.1 Maintainer : DLM Status : Active Target User : Myself (Portfolio Manager, Quant Developer, Trader) Objective : Complete full-stack macro-aware signal and trade structuring engine \u2705 Phase 1: Foundation \u2013 Data & Infrastructure Task Description Status PostgreSQL setup Create clean schema for macro, fundamentals, prices, technicals \u2705 Data ingestion scripts Automate ingestion from FRED, Zacks, Yahoo, IBKR, etc. \u2705 Cron automation Set up daily job runner for updates and processing \u2705 Data audit logs Track data ingestion success/failure, row counts \ud83d\udd04 In Progress Point-in-time handling Ensure no future data leakage (earnings, estimates, etc.) \ud83d\udd04 \ud83d\udea6 Phase 2: Signal Engine \u2013 Macro + Fundamental + Technical Task Description Status Signal YAML/JSON config Define reusable signal templates (e.g. PE + EPS + ISM) \ud83d\udd1c Macro regime tagging Detect macro environments (e.g., Goldilocks, Reflation) \ud83d\udd04 Technical indicator builder Compute moving averages, MACD, RSI, vol \u2705 Combined signal generator Merge macro, fundamental, technical filters \ud83d\udd04 Signal audit log Store historical signals and version them \ud83d\udd1c \ud83d\udcc8 Phase 3: Backtesting Engine Task Description Status Backtest loop Evaluate signals with transaction costs, drawdown, Sharpe \ud83d\udd04 Rolling performance metrics Track signal performance by regime and date range \ud83d\udd1c Hit rate and attribution Win %, avg win/loss, regime attribution \ud83d\udd1c Trade log integration Link signals to executed trades \ud83d\udd1c \ud83d\udcbc Phase 4: Portfolio Construction & Risk Task Description Status Position sizing logic Size by conviction, vol, beta, VaR \ud83d\udd1c Long/short balancing Ensure hedged book by sector/market cap \ud83d\udd1c Portfolio risk metrics Track beta, sector exposure, drawdown, VaR \ud83d\udd1c Integration with options tool Pass signals into option structuring logic \ud83d\udd1c \ud83e\uddee Phase 5: Option Structuring & Analytics Task Description Status Options pricing engine Build/fetch live prices, compute Greeks \ud83d\udd04 Strategy builder Structure verticals, calendars, spreads \ud83d\udd04 Breakeven and risk-reward charts Visual output for trade review \ud83d\udd1c Overlay stress tester Stress trades for spot, vol, time \ud83d\udd1c \ud83d\udcca Phase 6: Dashboards & Reporting Task Description Status Dash/Streamlit dashboard View macro data, signals, live trades \ud83d\udd04 Regime monitor panel Track current macro backdrop live \ud83d\udd1c Daily signal report Auto-generate HTML/PDF summary \ud83d\udd1c Trade tracker Show open/closed trades, P&L, Greeks \ud83d\udd1c \ud83e\udde0 Phase 7: Process Automation & Feedback Loop Task Description Status Logging & changelogs Git-versioned changelog for signals, trades, data \ud83d\udd04 Journal integration Link daily notes to trades/signals \ud83d\udd1c Post-trade analysis Evaluate what worked, what didn\u2019t \ud83d\udd1c Weekly wrap-up script Summary of trades, signals, macro shifts \ud83d\udd1c \ud83d\udd04 Versioning Version Goals v0.1 MVP pipeline: macro + fundamental signal \u2192 backtest \u2192 dashboard v0.2 Full long/short portfolio structuring and macro regime overlays v0.3 Options structuring engine fully integrated with trade planner v1.0 Complete live workflow: macro filter \u2192 trade idea \u2192 structured trade \u2192 tracked and reviewed \ud83d\udd1a Notes Built by and for DLM \u2014 designed to replicate and scale my own thought process Modular by design \u2014 each layer can be swapped, upgraded, or extended Focused on edge: only build what enhances signal clarity, speed, or risk-adjusted returns","title":"\ud83d\uddfa\ufe0f DLM Research Engine \u2013 Product Roadmap"},{"location":"Roadmap/#dlm-research-engine-product-roadmap","text":"Version : 0.1 Maintainer : DLM Status : Active Target User : Myself (Portfolio Manager, Quant Developer, Trader) Objective : Complete full-stack macro-aware signal and trade structuring engine","title":"\ud83d\uddfa\ufe0f DLM Research Engine \u2013 Product Roadmap"},{"location":"Roadmap/#phase-1-foundation-data-infrastructure","text":"Task Description Status PostgreSQL setup Create clean schema for macro, fundamentals, prices, technicals \u2705 Data ingestion scripts Automate ingestion from FRED, Zacks, Yahoo, IBKR, etc. \u2705 Cron automation Set up daily job runner for updates and processing \u2705 Data audit logs Track data ingestion success/failure, row counts \ud83d\udd04 In Progress Point-in-time handling Ensure no future data leakage (earnings, estimates, etc.) \ud83d\udd04","title":"\u2705 Phase 1: Foundation \u2013 Data &amp; Infrastructure"},{"location":"Roadmap/#phase-2-signal-engine-macro-fundamental-technical","text":"Task Description Status Signal YAML/JSON config Define reusable signal templates (e.g. PE + EPS + ISM) \ud83d\udd1c Macro regime tagging Detect macro environments (e.g., Goldilocks, Reflation) \ud83d\udd04 Technical indicator builder Compute moving averages, MACD, RSI, vol \u2705 Combined signal generator Merge macro, fundamental, technical filters \ud83d\udd04 Signal audit log Store historical signals and version them \ud83d\udd1c","title":"\ud83d\udea6 Phase 2: Signal Engine \u2013 Macro + Fundamental + Technical"},{"location":"Roadmap/#phase-3-backtesting-engine","text":"Task Description Status Backtest loop Evaluate signals with transaction costs, drawdown, Sharpe \ud83d\udd04 Rolling performance metrics Track signal performance by regime and date range \ud83d\udd1c Hit rate and attribution Win %, avg win/loss, regime attribution \ud83d\udd1c Trade log integration Link signals to executed trades \ud83d\udd1c","title":"\ud83d\udcc8 Phase 3: Backtesting Engine"},{"location":"Roadmap/#phase-4-portfolio-construction-risk","text":"Task Description Status Position sizing logic Size by conviction, vol, beta, VaR \ud83d\udd1c Long/short balancing Ensure hedged book by sector/market cap \ud83d\udd1c Portfolio risk metrics Track beta, sector exposure, drawdown, VaR \ud83d\udd1c Integration with options tool Pass signals into option structuring logic \ud83d\udd1c","title":"\ud83d\udcbc Phase 4: Portfolio Construction &amp; Risk"},{"location":"Roadmap/#phase-5-option-structuring-analytics","text":"Task Description Status Options pricing engine Build/fetch live prices, compute Greeks \ud83d\udd04 Strategy builder Structure verticals, calendars, spreads \ud83d\udd04 Breakeven and risk-reward charts Visual output for trade review \ud83d\udd1c Overlay stress tester Stress trades for spot, vol, time \ud83d\udd1c","title":"\ud83e\uddee Phase 5: Option Structuring &amp; Analytics"},{"location":"Roadmap/#phase-6-dashboards-reporting","text":"Task Description Status Dash/Streamlit dashboard View macro data, signals, live trades \ud83d\udd04 Regime monitor panel Track current macro backdrop live \ud83d\udd1c Daily signal report Auto-generate HTML/PDF summary \ud83d\udd1c Trade tracker Show open/closed trades, P&L, Greeks \ud83d\udd1c","title":"\ud83d\udcca Phase 6: Dashboards &amp; Reporting"},{"location":"Roadmap/#phase-7-process-automation-feedback-loop","text":"Task Description Status Logging & changelogs Git-versioned changelog for signals, trades, data \ud83d\udd04 Journal integration Link daily notes to trades/signals \ud83d\udd1c Post-trade analysis Evaluate what worked, what didn\u2019t \ud83d\udd1c Weekly wrap-up script Summary of trades, signals, macro shifts \ud83d\udd1c","title":"\ud83e\udde0 Phase 7: Process Automation &amp; Feedback Loop"},{"location":"Roadmap/#versioning","text":"Version Goals v0.1 MVP pipeline: macro + fundamental signal \u2192 backtest \u2192 dashboard v0.2 Full long/short portfolio structuring and macro regime overlays v0.3 Options structuring engine fully integrated with trade planner v1.0 Complete live workflow: macro filter \u2192 trade idea \u2192 structured trade \u2192 tracked and reviewed","title":"\ud83d\udd04 Versioning"},{"location":"Roadmap/#notes","text":"Built by and for DLM \u2014 designed to replicate and scale my own thought process Modular by design \u2014 each layer can be swapped, upgraded, or extended Focused on edge: only build what enhances signal clarity, speed, or risk-adjusted returns","title":"\ud83d\udd1a Notes"},{"location":"Vision/","text":"\ud83c\udfaf DLM Research Engine \u2013 Product Vision \ud83e\udded Vision Statement To build a fully integrated, macro-aware, signal-driven trading platform that empowers me to consistently generate, structure, monitor, and refine absolute return trade ideas across equities, commodities, and fixed income \u2014 with precision, speed, and conviction \u2014 using my own worldview, research process, and option overlays. \ud83d\udee0\ufe0f Mission Design a seamless system that unifies macroeconomic data ingestion, fundamental and technical signal generation, strategy backtesting, portfolio construction, trade structuring, and real-time monitoring \u2014 eliminating fragmentation, increasing throughput, and enhancing capital protection. \ud83d\udd27 Product Overview Component Description Data Engine Pulls, cleans, and stores macro, fundamental, and price data in PostgreSQL with point-in-time accuracy. Signal Generator Generates trade signals based on macro regime, earnings revisions, valuation, and technical overlays. Backtest Engine Simulates strategy performance with full analytics: returns, drawdowns, hit rate, and attribution. Portfolio Constructor Builds diversified long/short portfolios using conviction tiers and macro context. Options Structuring Tool Designs and prices option trades with full Greek analysis, breakevens, and risk/reward profiles. Dashboards + Alerts Visualizes live signals, macro indicators, strategy performance, and sends updates. Automation Layer Uses cron jobs to automate data refresh, signal generation, and reporting with full logging and audit trails. \ud83d\udc64 Go-to-Market (Me as the Market) \u2705 Pain Points Solved Need Solution Reduce friction in trade idea generation Unified signal engine integrating all data layers Increase throughput of quality trades Fast filtering, conviction tagging, repeatable process Trade with more confidence Macro-aligned signal context, strategy-tested Stay rigorous and organized Logs, dashboards, changelogs, signal versioning Eliminate spreadsheet sprawl All workflows in PostgreSQL, Python, React Structure and track options Dedicated option analytics and overlays \ud83d\udd04 Daily/Weekly Workflow Auto-run daily jobs : Ingest macro, earnings, prices, update technicals. Morning review : Scan new signals, macro shifts, portfolio exposure. Midday research : Deep dive into high-conviction signals, structure trades. Evening wrap-up : Update journal, track trade activity, review logs. Weekly macro + trade review : Publish insights, document shifts, plan positioning. \ud83d\udca1 Design Principles First-principles driven : Transparent, explainable signals and logic. Macro-aware : Worldview-aligned filtering and regime tagging. Options-ready : All signals feed directly into derivatives structuring. Automated and auditable : Full system logs and version control. Lightweight, extensible stack : PostgreSQL + Python + React + GitHub. Trade-focused : Every feature exists to improve risk-adjusted returns. \ud83d\udcc1 File Name: VISION.md Created: April 1, 2025 Maintainer: DLM Status: Draft v0.1 (Living Document)","title":"\ud83c\udfaf DLM Research Engine \u2013 Product Vision"},{"location":"Vision/#dlm-research-engine-product-vision","text":"","title":"\ud83c\udfaf DLM Research Engine \u2013 Product Vision"},{"location":"Vision/#vision-statement","text":"To build a fully integrated, macro-aware, signal-driven trading platform that empowers me to consistently generate, structure, monitor, and refine absolute return trade ideas across equities, commodities, and fixed income \u2014 with precision, speed, and conviction \u2014 using my own worldview, research process, and option overlays.","title":"\ud83e\udded Vision Statement"},{"location":"Vision/#mission","text":"Design a seamless system that unifies macroeconomic data ingestion, fundamental and technical signal generation, strategy backtesting, portfolio construction, trade structuring, and real-time monitoring \u2014 eliminating fragmentation, increasing throughput, and enhancing capital protection.","title":"\ud83d\udee0\ufe0f Mission"},{"location":"Vision/#product-overview","text":"Component Description Data Engine Pulls, cleans, and stores macro, fundamental, and price data in PostgreSQL with point-in-time accuracy. Signal Generator Generates trade signals based on macro regime, earnings revisions, valuation, and technical overlays. Backtest Engine Simulates strategy performance with full analytics: returns, drawdowns, hit rate, and attribution. Portfolio Constructor Builds diversified long/short portfolios using conviction tiers and macro context. Options Structuring Tool Designs and prices option trades with full Greek analysis, breakevens, and risk/reward profiles. Dashboards + Alerts Visualizes live signals, macro indicators, strategy performance, and sends updates. Automation Layer Uses cron jobs to automate data refresh, signal generation, and reporting with full logging and audit trails.","title":"\ud83d\udd27 Product Overview"},{"location":"Vision/#go-to-market-me-as-the-market","text":"","title":"\ud83d\udc64 Go-to-Market (Me as the Market)"},{"location":"Vision/#pain-points-solved","text":"Need Solution Reduce friction in trade idea generation Unified signal engine integrating all data layers Increase throughput of quality trades Fast filtering, conviction tagging, repeatable process Trade with more confidence Macro-aligned signal context, strategy-tested Stay rigorous and organized Logs, dashboards, changelogs, signal versioning Eliminate spreadsheet sprawl All workflows in PostgreSQL, Python, React Structure and track options Dedicated option analytics and overlays","title":"\u2705 Pain Points Solved"},{"location":"Vision/#dailyweekly-workflow","text":"Auto-run daily jobs : Ingest macro, earnings, prices, update technicals. Morning review : Scan new signals, macro shifts, portfolio exposure. Midday research : Deep dive into high-conviction signals, structure trades. Evening wrap-up : Update journal, track trade activity, review logs. Weekly macro + trade review : Publish insights, document shifts, plan positioning.","title":"\ud83d\udd04 Daily/Weekly Workflow"},{"location":"Vision/#design-principles","text":"First-principles driven : Transparent, explainable signals and logic. Macro-aware : Worldview-aligned filtering and regime tagging. Options-ready : All signals feed directly into derivatives structuring. Automated and auditable : Full system logs and version control. Lightweight, extensible stack : PostgreSQL + Python + React + GitHub. Trade-focused : Every feature exists to improve risk-adjusted returns.","title":"\ud83d\udca1 Design Principles"},{"location":"Vision/#file-name-visionmd","text":"Created: April 1, 2025 Maintainer: DLM Status: Draft v0.1 (Living Document)","title":"\ud83d\udcc1 File Name: VISION.md"},{"location":"changelog/","text":"v0.3.0 - 2025-03-30 v0.2.0 - 2025-03-30 v0.1.0 - 2025-03-27","title":"Changelog"},{"location":"changelog/#v030-2025-03-30","text":"","title":"v0.3.0 - 2025-03-30"},{"location":"changelog/#v020-2025-03-30","text":"","title":"v0.2.0 - 2025-03-30"},{"location":"changelog/#v010-2025-03-27","text":"","title":"v0.1.0 - 2025-03-27"},{"location":"ideas/","text":"Ideas Dashboard Strategies are developed through a rigorous top-down macroeconomic framework integrated with bottom-up fundamental analysis and extensive use of quantitative methods to identify high-conviction opportunities across asset classes, geographies, durations, sectors, industries, and risk factors. Long/Short portfolios are structured with a long volatility targeting approach and are designed to deliver defined risk exposure and asymmetric return profiles. Risk management is embedded at every stage of the portfolio management process, with capital preservation and downside protection prioritised as core principles. Here's some inline math: $E = mc^2$. And here's a block: $$ \\min_{\\mathbf{w}} \\mathbf{w}^\\top \\Sigma \\mathbf{w} $$ Here's some inline math: $E = \\text{mc}^2$. $E = \\mathrm{mc}^2$ Bad: $E = mc^2$ Better: $E = \\mathrm{mc}^2$ Best: $E = \\text{mc}^2$ $E = \\text{mc}^2$ \u2705 $E = \\text{mc}^2$ \u2705 $E = \\mathrm{mc}^2$ \u2705 $E = mc^2$ \u274c (avoid)","title":"Trade Ideas"},{"location":"ideas/#ideas-dashboard","text":"Strategies are developed through a rigorous top-down macroeconomic framework integrated with bottom-up fundamental analysis and extensive use of quantitative methods to identify high-conviction opportunities across asset classes, geographies, durations, sectors, industries, and risk factors. Long/Short portfolios are structured with a long volatility targeting approach and are designed to deliver defined risk exposure and asymmetric return profiles. Risk management is embedded at every stage of the portfolio management process, with capital preservation and downside protection prioritised as core principles. Here's some inline math: $E = mc^2$. And here's a block: $$ \\min_{\\mathbf{w}} \\mathbf{w}^\\top \\Sigma \\mathbf{w} $$ Here's some inline math: $E = \\text{mc}^2$. $E = \\mathrm{mc}^2$ Bad: $E = mc^2$ Better: $E = \\mathrm{mc}^2$ Best: $E = \\text{mc}^2$ $E = \\text{mc}^2$ \u2705 $E = \\text{mc}^2$ \u2705 $E = \\mathrm{mc}^2$ \u2705 $E = mc^2$ \u274c (avoid)","title":"Ideas Dashboard"},{"location":"macro/","text":"Macro Dashboard Tracks macro indicators such as: - Industrial Production - Core PCE - Durable Goods - Personal Income & Spending All data stored in fred_series table in dlm_research Postgres DB.","title":"Macro"},{"location":"macro/#macro-dashboard","text":"Tracks macro indicators such as: - Industrial Production - Core PCE - Durable Goods - Personal Income & Spending All data stored in fred_series table in dlm_research Postgres DB.","title":"Macro Dashboard"},{"location":"pipelines/","text":"Data Pipelines FRED \u2192 PostgreSQL Purpose Pull key economic time series (e.g. Industrial Production, Core PCE) from the FRED API and store in PostgreSQL for analysis and modeling. Data Sources FRED Series IDs: INDPRO : Industrial Production DGORDER : Durable Goods Orders PCEPILFE : Core PCE Price Index PI : US Personal Income PCE : US Personal Spending Workflow fetch_fred_data.py Loads FRED API key from .env Pulls selected series as Pandas DataFrame store_fred_to_postgres.py Connects to Postgres using credentials from .env Transforms and inserts records into fred_series table Automation Cron job (planned): @daily schedule to re-run scripts Future: Move to Airflow or Dagster pipeline Tests / Validation Row counts per series Timestamp verification Duplication handling Sample Output ```sql SELECT COUNT(*) FROM fred_series WHERE series_id = 'INDPRO';","title":"Pipelines"},{"location":"pipelines/#data-pipelines","text":"","title":"Data Pipelines"},{"location":"pipelines/#fred-postgresql","text":"","title":"FRED \u2192 PostgreSQL"},{"location":"pipelines/#purpose","text":"Pull key economic time series (e.g. Industrial Production, Core PCE) from the FRED API and store in PostgreSQL for analysis and modeling.","title":"Purpose"},{"location":"pipelines/#data-sources","text":"FRED Series IDs: INDPRO : Industrial Production DGORDER : Durable Goods Orders PCEPILFE : Core PCE Price Index PI : US Personal Income PCE : US Personal Spending","title":"Data Sources"},{"location":"pipelines/#workflow","text":"fetch_fred_data.py Loads FRED API key from .env Pulls selected series as Pandas DataFrame store_fred_to_postgres.py Connects to Postgres using credentials from .env Transforms and inserts records into fred_series table","title":"Workflow"},{"location":"pipelines/#automation","text":"Cron job (planned): @daily schedule to re-run scripts Future: Move to Airflow or Dagster pipeline","title":"Automation"},{"location":"pipelines/#tests-validation","text":"Row counts per series Timestamp verification Duplication handling","title":"Tests / Validation"},{"location":"pipelines/#sample-output","text":"```sql SELECT COUNT(*) FROM fred_series WHERE series_id = 'INDPRO';","title":"Sample Output"},{"location":"schema/","text":"Database Schema fred_series Column Name Type Description id SERIAL Primary key series_id TEXT FRED series code (e.g., INDPRO ) observation_date DATE Date of the observation value NUMERIC Value reported by FRED retrieved_at TIMESTAMP When data was inserted into Postgres Table Snapshot ```sql CREATE TABLE fred_series ( id SERIAL PRIMARY KEY, series_id TEXT NOT NULL, observation_date DATE NOT NULL, value NUMERIC, retrieved_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP );","title":"Database Schema"},{"location":"schema/#database-schema","text":"","title":"Database Schema"},{"location":"schema/#fred_series","text":"Column Name Type Description id SERIAL Primary key series_id TEXT FRED series code (e.g., INDPRO ) observation_date DATE Date of the observation value NUMERIC Value reported by FRED retrieved_at TIMESTAMP When data was inserted into Postgres","title":"fred_series"},{"location":"schema/#table-snapshot","text":"```sql CREATE TABLE fred_series ( id SERIAL PRIMARY KEY, series_id TEXT NOT NULL, observation_date DATE NOT NULL, value NUMERIC, retrieved_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP );","title":"Table Snapshot"}]}